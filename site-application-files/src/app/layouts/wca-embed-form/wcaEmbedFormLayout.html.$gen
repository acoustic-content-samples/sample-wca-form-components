<!-- layout type -->
<h1>WcaEmbedFormLayoutComponent</h1>
<!-- show some metainformation -->
<h2>Meta Information</h2>
<dl>
    <!-- more properties are available, consult https://www.npmjs.com/package/ibm-wch-sdk-ng for documentation -->
    <dt>ID</dt>
    <dd>{{ renderingContext.id }}</dd>
    <dt>name</dt>
    <dd>{{ renderingContext.name }}</dd>
</dl>
<a href="https://www.npmjs.com/package/ibm-wch-sdk-ng">more documentation</a>
<!-- show the fields -->
<h2>Property List</h2>
  <dl>
  <dt>
    Property: title
| Key: title
| Label: Title
  </dt>
  <dd>
<!-- text type, see https://angular.io/guide/template-syntax#property-binding-or-interpolation -->
    <div *ngIf="title" wchEditable="title">{{ title }}</div>
</dd>
  <dt>
    Property: *actionUrl
| Key: actionUrl
| Label: Action URL
  </dt>
  <dd>
<!-- link -->
    <a wchEditable="actionUrl" [href]="actionUrl.linkURL" [title]="actionUrl.linkDescription">{{ actionUrl.linkText }}</a>
</dd>
  <dt>
    Property: submitButtonLabel
| Key: submitButtonLabel
| Label: Submit button label
  </dt>
  <dd>
<!-- text type, see https://angular.io/guide/template-syntax#property-binding-or-interpolation -->
    <div *ngIf="submitButtonLabel" wchEditable="submitButtonLabel">{{ submitButtonLabel }}</div>
</dd>
  <dt>
    Property: terms
| Key: terms
| Label: Terms
  </dt>
  <dd>
<!-- text type, see https://angular.io/guide/template-syntax#property-binding-or-interpolation -->
    <div *ngIf="terms" wchEditable="terms">{{ terms }}</div>
</dd>
  <dt>
    Property: submitMessage
| Key: submitMessage
| Label: Submit message
  </dt>
  <dd>
<!-- text type, see https://angular.io/guide/template-syntax#property-binding-or-interpolation -->
    <div *ngIf="submitMessage" wchEditable="submitMessage">{{ submitMessage }}</div>
</dd>
  <dt>
    Property: *formElements
| Key: formElements
| Label: Form elements
  </dt>
  <dd>
<!-- reference, see https://www.npmjs.com/package/ibm-wch-sdk-ng ContentrefComponent -->
    <pre>
        &lt;ul&gt;
            &lt;li *ngFor=&quot;let v of formElements;trackBy: trackByComponentId;&quot;&gt;
                &lt;wch-contrentref [renderingContext]=&quot;v&quot;&gt;&lt;/wch-contrentref&gt;
            &lt;/li&gt;
        &lt;/ul&gt;
    </pre>
</dd>
</dl>